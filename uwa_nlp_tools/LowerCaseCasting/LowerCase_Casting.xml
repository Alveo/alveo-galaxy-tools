<tool id="LowerCase_Casting" name="Bag-of-Words processor" version="0.0.1">
    <description>Read multiple text files and merge into a single output file for further processing</description>
    
    <requirements>
        <requirement type="package" version="3.2.1">nltk</requirement>
    </requirements>
    
    
    <command interpreter="python">
    LowerCase_Casting.py -f $input1 -e '$exclude_line' -s $stopword -n $number -q $symbol $> $out_file1
    </command>

    <inputs>
       <param format="txt" name="input1" type="data" label="Select data to be processed"/>
		
        <param name="exclude_line" type="text" value="-----next_doc-----" label="Provide the line/sentence to be excluded" help="This is the same as the file delimiter in Dataset Merger if the input to this tool is from Dataset Merger. Leave it empty if the input is not produced by the Dataset Merger" />
        
        <param name="stopword" type="boolean" label="Exclude stop words" checked="True"/>
        
        <param name="customised_stopwords" type="text" value="" label="Provide additional stopwords to be excluded" help="Use a pipe to delimit words, e.g. ARTICLE|DOC|SENT " />
        
        
        <param name="number" type="boolean" label="Exclude number tokens" checked="True"/>
        <param name="symbol" type="boolean" label="Exclude symbols" checked="True"/>
    </inputs>
    
    <outputs>
        <data name="out_file1" format="input" metadata_source="input1"/>
    </outputs>


    <help>


**What it does**

This tool takes a .txt file or an output from the Dataset Merger tool as inputs, and outputs all tokens in a bag-of-word format while it still keeps the sentences. 

When *Exclude stop words* option is selected, it removes standard stop words from the NLTK Python package, including:

*i me my myself we our ours ourselves you your yours yourself yourselves he him his himself she her hers herself it its itself they them their theirs themselves what which who whom this that these those am is are was were be been being have has had having do does did doing a an the and but if or because as until while of at by for with about against between into through during before after above below to from up down in out on off over under again further then once here there when where why how all any both each few more most other some such no nor not only own same so than too very s t can will just don should now d ll m o re ve y ain aren couldn didn doesn hadn hasn haven isn ma mightn mustn needn shan shouldn wasn weren won wouldn*

When *Exclude numbers* option is selected, it removes all purely numeric tokens. It doesn't, however, remove tokens containing both characters and numbers, such as 35c.

When *Exclude symbols options* is selected, it removes all purely symbolic tokens.


-----

**Example**

**Input**

I reviewed ##### today as he told me his driving licence is coming up and he thought he needed glasses for this purpose. 

**Output**

reviewed today told driving licence coming thought needed glasses purpose.


-----

.. class:: infomark 

This tool will only work on properly formatted .txt datasets.


    </help>
</tool>
